kind: pipeline
name: default

steps:
- name: setup-shared-env_vars
  image: alpine
  commands:
    # update the system and add bash and curl
    - apk update
    - apk add bash
    # hacky way of keeping all env vars in one place
    - 'echo "export GPAAS_APP_NAME=$GPAAS_APP_NAME" >> .env_vars'
    - 'echo "export GPAAS_ORG=$GPAAS_ORG" >> .env_vars'
    - 'echo "export GPAAS_SPACE=$GPAAS_SPACE" >> .env_vars'
    - 'echo "export GPAAS_API=$GPAAS_API" >> .env_vars'
    - 'echo "export EXPECTED_STATUS_CODE=$EXPECTED_STATUS_CODE" >> .env_vars'
    - 'echo "export GPAAS_DOMAIN=$GPAAS_DOMAIN" >> .env_vars'
    - 'echo "export GPAAS_USER=$GPAAS_USER" >> .env_vars'
    - 'echo "export GPAAS_PASS=$GPAAS_PASS" >> .env_vars'
  environment:
    GPAAS_APP_NAME: govuk-prototype-kit
    GPAAS_ORG: gds-tech-ops
    GPAAS_SPACE: sandbox
    GPAAS_API: api.cloud.service.gov.uk
    EXPECTED_STATUS_CODE: 200
    GPAAS_DOMAIN: cloudapps.digital
    GPAAS_USER:
      from_secret: gpaas_user
    GPAAS_PASS:
      from_secret: gpaas_pass

- name: test
  image: node
  commands:
    - npm install
    - npm test

- name: cf-deploy-green
  image: governmentpaas/cf-cli
  commands:
    # shared .env_vars file from first step
    - source .env_vars
    # set api endpoint and login
    - 'cf login -a $GPAAS_API -u $GPAAS_USER -p "$GPAAS_PASS"'
    # set the target
    - 'cf target -o $GPAAS_ORG -s $GPAAS_SPACE'
    # push the apps
    - rm Procfile
    - 'echo {\"collectUsageData\":false} > usage-data-config.json'
    - cf push $GPAAS_APP_NAME-temp

- name: green-check
  image: alpine
  commands:
    # shared .env_vars file from first step
    - source .env_vars
    # update the system and add bash and curl
    - apk update
    - apk add bash curl
    # get the route from the green-deploy.txt file outputted in the prev step
    #- 'URL=$(grep "^routes:" green-deploy.txt | cut -d ":" -f2 | tr -d " ")'
    - URL=$GPAAS_APP_NAME-temp.$GPAAS_DOMAIN
    - 'echo URL: $URL'
    # get the status code
    - 'STATUS_CODE=$(curl -ILs $URL | grep HTTP/ | tail -1 | cut -d " " -f2)'
    - 'echo STATUS_CODE: $STATUS_CODE'
    # compare the status codes
    - '[ "$STATUS_CODE" == "$EXPECTED_STATUS_CODE" ] && exit 0 || exit 1'

- name: cf-map-blue
  image: governmentpaas/cf-cli
  commands:
    # shared .env_vars file from first step
    - source .env_vars
    # set api endpoint and login
    - 'cf login -a $GPAAS_API -u $GPAAS_USER -p "$GPAAS_PASS"'
    # set the target
    - 'cf target -o $GPAAS_ORG -s $GPAAS_SPACE'
    # map the temp app to the main app and domain, so..
    # app-temp.domain point to app.domain
    - 'cf map-route $GPAAS_APP_NAME-temp $GPAAS_DOMAIN -n $GPAAS_APP_NAME'
    # unmap route from old / blue environment
    - 'cf unmap-route $GPAAS_APP_NAME $GPAAS_DOMAIN -n $GPAAS_APP_NAME'
    # delete the old / blue environment
    - 'cf delete $GPAAS_APP_NAME -r -f'
    # rename the temp app name back to desired app name
    - 'cf rename $GPAAS_APP_NAME-temp $GPAAS_APP_NAME'

---
kind: secret
data:
  gpaas_user: i--4jbVi-skBP6JyLd1mklQXq4IL62lIHKIFz8QDezMV0xymPavtphOqHgSB4-HU0XyAz7s6W9SgPhQSoWZef3vj3962ZvnNdnLXIDvuOAR-
  gpaas_pass: xL4cd9NsPaaINa4oof_Yp7KGowkyflFwEg_Q_dhX7nnzXODb-LC3kCPGb3ZbAdyr0lkh16Mu3JuV2bxMHA2N
